#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass book
\begin_preamble
\usepackage{hyperref}
\usepackage{tikz}
\usetikzlibrary{shapes.geometric, arrows}
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing double
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 0
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1.5in
\topmargin 1.6in
\rightmargin 1.2in
\bottommargin 1.6in
\headheight 1.5in
\headsep 0.3in
\footskip 0.8in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle plain
\bullet 1 2 6 -1
\bullet 2 2 12 -1
\bullet 3 1 25 -1
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Developed Application
\begin_inset CommandInset label
LatexCommand label
name "chap:Developed Application"

\end_inset


\end_layout

\begin_layout Standard
Within this Chapter the developed application in terms of software development
 is described.
 
\end_layout

\begin_layout Standard
This application is the base for the integration of pedestrian detection
 algorithms as well as semantic segmentation.
 Visualization and arrangement of the usage statistics from the different
 areas of interest is also done by the software.
 
\end_layout

\begin_layout Standard
Application environment should be user-friendly to ensure a correct and
 easy usage by the end user.
 It has been developed completely from scratch for the purpose of this Master
 Thesis.
\end_layout

\begin_layout Standard
The application has been developed under 
\color blue

\begin_inset CommandInset href
LatexCommand href
name "QT Creator"
target "https://www.qt.io/"

\end_inset


\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\color blue
https://www.qt.io/
\end_layout

\end_inset


\color inherit
 coding environment in Mac OS Sierra.
 This decision has fundamentally been based on the following QT characteristics:
\end_layout

\begin_layout Enumerate
Its cross-platform characteristic which makes it easily portable from one
 operating system to another such as Windows or Linux distributions.
\end_layout

\begin_layout Enumerate
Its application window designer that allows the programmer to design software
 windows by using an interface instead of having to create windows by coding
 (Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:QT-Window-Designer"

\end_inset

).
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/Developed Application/QT Window Designer.png
	lyxscale 20
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
QT Main Window Designer
\begin_inset CommandInset label
LatexCommand label
name "fig:QT-Window-Designer"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
The possibility to add 
\color blue

\begin_inset CommandInset href
LatexCommand href
name "OpenCV"
target "http://opencv.org/"

\end_inset


\color inherit

\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\color blue
http://opencv.org/
\end_layout

\end_inset

 libraries to the project as well as independent external libraries.
\end_layout

\begin_layout Enumerate
Its multi-thread capabilities that enables to perform different code segments
 in various threads to increase computational speed.
\end_layout

\begin_layout Standard
Due to the complexity of some of the algorithms used, in terms of parameter
 tuning and configuration, two separate applications have been developed:
 developer and user version.
 
\end_layout

\begin_layout Standard
The first version of the software corresponds to the developer application.
 It is design so it can be used by programmers or engineers who generally
 understand concepts of the algorithms running at the backend application.
 This means that:
\end_layout

\begin_layout Enumerate
Variable parameters are available for tuning from the graphical interface.
\end_layout

\begin_layout Enumerate
Different pedestrian detectors can be selected.
\end_layout

\begin_layout Enumerate
Options and tuning for these algorithms can be done.
\end_layout

\begin_layout Enumerate
Results are displayed in different areas.
\end_layout

\begin_layout Standard
This version allows to change parameters and methods online.
 However, this assumes that the user has basic knowledge on how parameters
 affect the software performance.
\end_layout

\begin_layout Standard
For the developer application both single-thread and multi-thread versions
 have been developed and are discussed on the following lines.
 All the code for both approaches is available in a 
\color blue

\begin_inset CommandInset href
LatexCommand href
name "GitHub Repository"
target "https://github.com/alexlopezcifuentes/IPCV-MasterThesis/"

\end_inset


\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\color blue
https://github.com/alexlopezcifuentes/IPCV-MasterThesis/
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
During the analysis of the application trough the Section some flow-charts
 are displayed.
 A common legend for all of them is included in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Flow-chart-legend"

\end_inset

.
\end_layout

\begin_layout Section
Single-thread Developer Application
\end_layout

\begin_layout Standard
During the first stages of the development and for the sake of simplicity
 the application has been designed and developed to run under a single thread.
 This means that all the processing has been done sequentially camera by
 camera.
 A simple flow-chart diagram that illustrates the execution path can be
 seen in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Flow-chart diagram for the single-thread application"

\end_inset

 .
\end_layout

\begin_layout Standard
This approach has the advantage that all the code is executed in the same
 memory segment.
 This makes really simple, for instance, to share information between cameras.
 This design is however, only valid if the computational effort is minimum.
 All the process for the three cameras should be computed one after the
 other which means that when calculating detections for one camera, the
 others remain idle.
 When working with such a multi-camera system with heavy algorithms running
 
\begin_inset Formula $-$
\end_inset

as in the proposed method
\begin_inset Formula $-$
\end_inset

 the computational time increases exponentially and this design is no longer
 worthwhile.
\end_layout

\begin_layout Section
Multi-thread Developer Application
\end_layout

\begin_layout Standard
Multi-thread Developer approach can be observed in the flow-chart displayed
 in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Flow-chart diagram for the multi-thread application"

\end_inset

.
 Now different threads are running in parallel, one for each camera, and
 so, all the process is no longer done sequentially and computing power
 of the CPU can be further exploited.
\end_layout

\begin_layout Standard
However, as threads are running separately a synchronization strategy should
 be included to keep consistency in the application.
 
\end_layout

\begin_layout Standard
One thread can process a frame faster than another one due to multiple external
 reasons, nevertheless, the application should display the same exact frame
 for all the cameras at the same time.
 This is specially relevant if results are going to be shared between threads.
 In our case the synchronization is performed by two barriers 
\begin_inset Formula $-$
\end_inset

see diagram 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Flow-chart diagram for the multi-thread application"

\end_inset


\begin_inset Formula $-$
\end_inset

.
 
\end_layout

\begin_layout Itemize
The first one ensures that all the threads have perform PD before sharing
 these detections to the rest of the threads.
 
\end_layout

\begin_layout Itemize
Second barrier creates a meeting point at the end of the frame processing
 so a thread waits to the others before sending results to the main display.
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tikzstyle{startstop} = [rectangle, rounded corners, minimum width=3cm, minimum
 height=1cm,text centered, draw=black, fill=red!30]
\end_layout

\begin_layout Plain Layout


\backslash
tikzstyle{process} = [rectangle, minimum width=3cm, minimum height=1cm,
 text centered, draw=black, fill=orange!30]
\end_layout

\begin_layout Plain Layout


\backslash
tikzstyle{io} = [trapezium, trapezium left angle=70, trapezium right angle=110,
 minimum width=1cm, minimum height=1cm, text centered, draw=black, fill=blue!30,
 inner sep=10pt]
\end_layout

\begin_layout Plain Layout


\backslash
tikzstyle{decision} = [diamond, minimum width=1cm, minimum height=1cm,text
 width=1.5cm, text centered, draw=black, fill=green!30]
\end_layout

\begin_layout Plain Layout


\backslash
tikzstyle{arrow} = [draw, -latex']
\end_layout

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[node distance=2cm] 
\end_layout

\begin_layout Plain Layout

%% NODES
\end_layout

\begin_layout Plain Layout


\backslash
node (UIStart) [startstop] {
\backslash
footnotesize Start/Stop Module};
\end_layout

\begin_layout Plain Layout


\backslash
node (VideoInput) [io, right of = UIStart, xshift=2.3cm] {
\backslash
footnotesize Input/Output Module};
\end_layout

\begin_layout Plain Layout


\backslash
node (Camera2) [process, below of = UIStart] {
\backslash
footnotesize Process Module};
\end_layout

\begin_layout Plain Layout


\backslash
node (VideoEnd) [decision, right of = Camera2, xshift=2.3cm] {
\backslash
footnotesize Decision Module};
\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
Flow-chart legend
\begin_inset CommandInset label
LatexCommand label
name "fig:Flow-chart-legend"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tikzstyle{startstop} = [rectangle, rounded corners, minimum width=3cm, minimum
 height=1cm,text centered, draw=black, fill=red!30]
\end_layout

\begin_layout Plain Layout


\backslash
tikzstyle{process} = [rectangle, minimum width=3cm, minimum height=1cm,
 text centered, draw=black, fill=orange!30]
\end_layout

\begin_layout Plain Layout


\backslash
tikzstyle{io} = [trapezium, trapezium left angle=70, trapezium right angle=110,
 minimum width=1cm, minimum height=1cm, text centered, draw=black, fill=blue!30,
 inner sep=10pt]
\end_layout

\begin_layout Plain Layout


\backslash
tikzstyle{decision} = [diamond, minimum width=1cm, minimum height=1cm,text
 width=1.5cm, text centered, draw=black, fill=green!30]
\end_layout

\begin_layout Plain Layout


\backslash
tikzstyle{arrow} = [draw, -latex']
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[node distance=2cm] 
\end_layout

\begin_layout Plain Layout

%% NODES
\end_layout

\begin_layout Plain Layout


\backslash
node (UIStart) [startstop] {
\backslash
footnotesize Interface Start};
\end_layout

\begin_layout Plain Layout


\backslash
node (UIIdle) [startstop, below of = UIStart] {
\backslash
footnotesize Interface Idle};
\end_layout

\begin_layout Plain Layout


\backslash
node (VideoInput) [io, right of = UIIdle, xshift=2cm] {
\backslash
footnotesize Video Sequence};
\end_layout

\begin_layout Plain Layout


\backslash
node (ParamInput) [io, left of = UIIdle, xshift=-2cm] {
\backslash
footnotesize UI Parameters};
\end_layout

\begin_layout Plain Layout


\backslash
node (GetFrame) [process, below of=UIIdle, yshift=-0.5cm] {
\backslash
footnotesize Get Frame};
\end_layout

\begin_layout Plain Layout


\backslash
node (Camera2) [process, below of=GetFrame, yshift=-0.5cm] {
\backslash
footnotesize Camera 2};
\end_layout

\begin_layout Plain Layout


\backslash
node (Camera1) [process, left of=Camera2, xshift=-2cm] {
\backslash
footnotesize Camera 1};
\end_layout

\begin_layout Plain Layout


\backslash
node (Camera3) [process, right of=Camera2, xshift=2cm] {
\backslash
footnotesize Camera 3};
\end_layout

\begin_layout Plain Layout


\backslash
node (Display) [process, below of=Camera3, yshift=-0.5cm] {
\backslash
footnotesize Display};
\end_layout

\begin_layout Plain Layout


\backslash
node (VideoEnd) [decision, below of=Camera2, yshift=-0.5cm] {
\backslash
footnotesize Video Finished};
\end_layout

\begin_layout Plain Layout


\backslash
node (VideoStop) [startstop, below of=VideoEnd, yshift=-1cm] {
\backslash
footnotesize Video Stops};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

%% ARROWS
\end_layout

\begin_layout Plain Layout


\backslash
draw [arrow] (UIStart) -- (UIIdle);
\end_layout

\begin_layout Plain Layout


\backslash
draw [arrow] (VideoInput) -- (UIIdle);
\end_layout

\begin_layout Plain Layout


\backslash
draw [arrow] (ParamInput) -- (UIIdle);
\end_layout

\begin_layout Plain Layout


\backslash
draw [arrow] (UIIdle) -- (GetFrame);
\end_layout

\begin_layout Plain Layout


\backslash
draw [arrow] (GetFrame) |- ([yshift=0.6cm] Camera1.north) -- (Camera1.north);
\end_layout

\begin_layout Plain Layout


\backslash
draw [arrow] (Camera1) -- (Camera2);
\end_layout

\begin_layout Plain Layout


\backslash
draw [arrow] (Camera2) -- (Camera3);
\end_layout

\begin_layout Plain Layout


\backslash
draw [arrow] (Camera3) -- (Display);
\end_layout

\begin_layout Plain Layout


\backslash
draw [arrow] (Display) -- (VideoEnd);
\end_layout

\begin_layout Plain Layout


\backslash
draw [arrow] (VideoEnd.west) -- node[anchor=south]{No} ++(-5,0) -- ++(0,5)
 -- (GetFrame.west);
\end_layout

\begin_layout Plain Layout


\backslash
draw [arrow] (VideoEnd) -- node[anchor=east]{Yes}(VideoStop);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Flow-chart diagram for the single-thread application
\begin_inset CommandInset label
LatexCommand label
name "fig:Flow-chart diagram for the single-thread application"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
tikzstyle{startstop} = [rectangle, rounded corners, minimum width=3cm, minimum
 height=1cm,text centered, draw=black, fill=red!30]
\end_layout

\begin_layout Plain Layout


\backslash
tikzstyle{process} = [rectangle, minimum width=3cm, minimum height=1cm,
 text centered, draw=black, fill=orange!30]
\end_layout

\begin_layout Plain Layout


\backslash
tikzstyle{io} = [trapezium, trapezium left angle=70, trapezium right angle=110,
 minimum width=1cm, minimum height=1cm, text centered, draw=black, fill=blue!30,
 inner sep=10pt]
\end_layout

\begin_layout Plain Layout


\backslash
tikzstyle{decision} = [diamond, minimum width=1cm, minimum height=1cm,text
 width=1.5cm, text centered, draw=black, fill=green!30]
\end_layout

\begin_layout Plain Layout


\backslash
tikzstyle{arrow} = [draw, -latex']
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
begin{tikzpicture}[node distance=2cm] 
\end_layout

\begin_layout Plain Layout

%% NODES
\end_layout

\begin_layout Plain Layout


\backslash
node (UIStart) [startstop] {
\backslash
footnotesize Interface Start};
\end_layout

\begin_layout Plain Layout


\backslash
node (UIIdle) [startstop, below of = UIStart] {
\backslash
footnotesize Interface Idle};
\end_layout

\begin_layout Plain Layout


\backslash
node (VideoInput) [io, right of = UIIdle, xshift=2cm] {
\backslash
footnotesize Video Sequence};
\end_layout

\begin_layout Plain Layout


\backslash
node (ParamInput) [io, left of = UIIdle, xshift=-2cm] {
\backslash
footnotesize UI Parameters};
\end_layout

\begin_layout Plain Layout


\backslash
node (ThreadStart) [startstop, below of = UIIdle] {
\backslash
footnotesize Threads Start};
\end_layout

\begin_layout Plain Layout


\backslash
node (GetFrame) [startstop, below of = ThreadStart] {
\backslash
footnotesize Get New Video Frame};
\end_layout

\begin_layout Plain Layout


\backslash
node (Camera2) [process, below of=GetFrame, yshift = -0cm] {
\backslash
footnotesize Camera 2 Thread};
\end_layout

\begin_layout Plain Layout


\backslash
node (Camera1) [process, left of=Camera2, xshift=-2.7cm] {
\backslash
footnotesize Camera 1 Thread};
\end_layout

\begin_layout Plain Layout


\backslash
node (Camera3) [process, right of=Camera2, xshift=2.7cm] {
\backslash
footnotesize Camera 3 Thread};
\end_layout

\begin_layout Plain Layout


\backslash
node (PDBarrier) [startstop, below of=Camera2] {
\backslash
footnotesize PD Barrier / Meeting Point};
\end_layout

\begin_layout Plain Layout


\backslash
node (Camera22) [process, below of=PDBarrier, yshift = -0cm] {
\backslash
footnotesize Camera 2 Thread};
\end_layout

\begin_layout Plain Layout


\backslash
node (Camera12) [process, left of=Camera22, xshift=-2.7cm] {
\backslash
footnotesize Camera 1 Thread};
\end_layout

\begin_layout Plain Layout


\backslash
node (Camera32) [process, right of=Camera22, xshift=2.7cm] {
\backslash
footnotesize Camera 3 Thread};
\end_layout

\begin_layout Plain Layout


\backslash
node (DisplayBarrier) [startstop, below of=Camera22] {
\backslash
footnotesize Display Barrier / Meeting Point};
\end_layout

\begin_layout Plain Layout


\backslash
node (Display) [process, below of=DisplayBarrier] {
\backslash
footnotesize Display};
\end_layout

\begin_layout Plain Layout


\backslash
node (VideoEnd) [decision, below of=Display, yshift=-0.2cm] {
\backslash
footnotesize Video Finished};
\end_layout

\begin_layout Plain Layout


\backslash
node (VideoStop) [startstop, below of=VideoEnd, yshift=-0.5cm] {
\backslash
footnotesize Video Processing Stops};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

%% ARROWS
\end_layout

\begin_layout Plain Layout


\backslash
draw [arrow] (UIStart) -- (UIIdle);
\end_layout

\begin_layout Plain Layout


\backslash
draw [arrow] (VideoInput) -- (UIIdle);
\end_layout

\begin_layout Plain Layout


\backslash
draw [arrow] (ParamInput) -- (UIIdle);
\end_layout

\begin_layout Plain Layout


\backslash
draw [arrow] (UIIdle) -- (ThreadStart);
\end_layout

\begin_layout Plain Layout


\backslash
draw [arrow] (ThreadStart) -- (GetFrame);
\end_layout

\begin_layout Plain Layout


\backslash
draw [arrow] (GetFrame.south) -- (Camera1.north);
\end_layout

\begin_layout Plain Layout


\backslash
draw [arrow] (GetFrame.south) -- (Camera2.north);
\end_layout

\begin_layout Plain Layout


\backslash
draw [arrow] (GetFrame.south) -- (Camera3.north);
\end_layout

\begin_layout Plain Layout


\backslash
draw [arrow] (Camera1) |- (PDBarrier);
\end_layout

\begin_layout Plain Layout


\backslash
draw [arrow] (Camera2) -- (PDBarrier);
\end_layout

\begin_layout Plain Layout


\backslash
draw [arrow] (Camera3) |- (PDBarrier);
\end_layout

\begin_layout Plain Layout


\backslash
draw [arrow] (PDBarrier.south) -- (Camera12.north);
\end_layout

\begin_layout Plain Layout


\backslash
draw [arrow] (PDBarrier.south) -- (Camera22.north);
\end_layout

\begin_layout Plain Layout


\backslash
draw [arrow] (PDBarrier.south) -- (Camera32.north);
\end_layout

\begin_layout Plain Layout


\backslash
draw [arrow] (Camera12) |- (DisplayBarrier);
\end_layout

\begin_layout Plain Layout


\backslash
draw [arrow] (Camera22) -- (DisplayBarrier);
\end_layout

\begin_layout Plain Layout


\backslash
draw [arrow] (Camera32) |- (DisplayBarrier);
\end_layout

\begin_layout Plain Layout


\backslash
draw [arrow] (DisplayBarrier) -- (Display);
\end_layout

\begin_layout Plain Layout


\backslash
draw [arrow] (Display) -- (VideoEnd);
\end_layout

\begin_layout Plain Layout


\backslash
draw [arrow] (VideoEnd) -| node[near start, anchor=south]{No}([xshift=-5cm]
 GetFrame.west) -- (GetFrame.west);
\end_layout

\begin_layout Plain Layout


\backslash
draw [arrow] (VideoEnd) -- node[anchor=east]{Yes}(VideoStop);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
end{tikzpicture}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Flow-chart diagram for the multi-thread application
\begin_inset CommandInset label
LatexCommand label
name "fig:Flow-chart diagram for the multi-thread application"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Main Application Window
\end_layout

\begin_layout Standard
Main application window is shown in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Main-application-window"

\end_inset

.
 As one can observe it is compose of four separate areas:
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/Application/Main Window.png
	lyxscale 20
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Main application window
\begin_inset CommandInset label
LatexCommand label
name "fig:Main-application-window"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Application Menu Bar
\end_layout

\begin_layout Standard
In the menu depict in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Application-menu-bar"

\end_inset

 the main application actions are contained.
 From here the user can:
\end_layout

\begin_layout Enumerate
Open a new video sequence.
\end_layout

\begin_layout Enumerate
Compute the set of needed homographies for the integrated algorithms.
\end_layout

\begin_layout Enumerate
Close the application.
 
\end_layout

\begin_layout Enumerate
Search through the help searcher.
\end_layout

\begin_layout Enumerate
Open the external information window.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/Application/File Submenu.png
	lyxscale 60
	width 45text%
	height 7theight%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
File submenu
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/Application/Help Submenu.png
	lyxscale 60
	width 45text%
	height 7theight%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Help submenu
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/Application/Open File Dialog.png
	lyxscale 20
	width 55text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Open file dialog
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/Application/About Window.png
	lyxscale 30
	width 47text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Application information window.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Application menu bar
\begin_inset CommandInset label
LatexCommand label
name "fig:Application-menu-bar"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Options Menu
\end_layout

\begin_layout Standard
The options box (see Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Options Menu"

\end_inset

) in the application contains all the possible parameters that can be tuned
 during the execution of the program.
 From here algorithms can be changed in real time so there is no need to
 restart the execution before changing some parameter.
 From here user can change:
\end_layout

\begin_layout Itemize
Pedestrian detectors.
 The user can select among the following ones:
\end_layout

\begin_deeper
\begin_layout Itemize
PSP-Net detector
\end_layout

\begin_layout Itemize
HOG
\end_layout

\begin_layout Itemize
DPM
\end_layout

\begin_layout Itemize
ACF 
\end_layout

\begin_layout Itemize
Fast-RCNN
\end_layout

\end_deeper
\begin_layout Itemize
Different representation methods for PD detections as explained in Section
 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Pedestrian-reprojection"

\end_inset

:
\end_layout

\begin_deeper
\begin_layout Itemize
Lines
\end_layout

\begin_layout Itemize
Gaussians
\end_layout

\end_deeper
\begin_layout Itemize
Enables the user to select the threshold for PD algorithms.
\end_layout

\begin_layout Itemize
PD Filtering or constraint as explained in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Pedestrian-reprojection"

\end_inset

 can also be changed.
 The available options are:
\end_layout

\begin_deeper
\begin_layout Itemize
Raw PD
\end_layout

\begin_layout Itemize
PD with semantic constraining.
\end_layout

\begin_layout Itemize
PD with multi camera reprojection.
\end_layout

\end_deeper
\begin_layout Itemize
Mask filtering option to perform PD over a limited area.
\end_layout

\begin_layout Itemize
Ground truth check box to display or not ground truth information.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/Application/Options Menu.png
	lyxscale 30
	width 60text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Options Menu
\begin_inset CommandInset label
LatexCommand label
name "fig:Options Menu"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Information Display
\end_layout

\begin_layout Standard
Along this text box status information is provided to the user.
 Messages such as 
\begin_inset Quotes eld
\end_inset

Open video files
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Processing starts now
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

DPM Pedestrian Detector is now in use
\begin_inset Quotes erd
\end_inset

 appear during the execution of the application so the user can obtain some
 information about what to do, or what algorithm is in use.
 This can be observed in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Information-Display"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/Application/Information Display.png
	lyxscale 60
	width 60text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Information Display
\begin_inset CommandInset label
LatexCommand label
name "fig:Information-Display"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Results Display
\end_layout

\begin_layout Standard
This is the main display area in the application in which all the visual
 results are presented.
 
\end_layout

\begin_layout Standard
We have three separate windows for each of the used cameras as well as one
 more display window for the cenital plane.
 Here the camera frames and associated detections and/or ground truth are
 shown: Besides all the projected semantic can be observed on the cenital
 frame.
 An example is depicted in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Results Display Area"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/Application/Result Display.png
	lyxscale 40
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Results Display Area
\begin_inset CommandInset label
LatexCommand label
name "fig:Results Display Area"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Classes Distribution
\end_layout

\begin_layout Standard
In terms of C++ basic units the application has been divided into several
 classes for a better code design and to ease code comprehension / interpretatio
n.
\end_layout

\begin_layout Itemize

\series bold
MainWindow
\series default
: This class corresponds to the main interface window and main application
 thread.
 It is the base for all the further processing as everything is inherited
 from this class.
 The reason for that is that 
\series bold
MainWindow
\series default
 class is used to create threads and sharing procedures between them.
 Associated functions for this class are:
\end_layout

\begin_deeper
\begin_layout Itemize
Creating file open dialogs.
\end_layout

\begin_layout Itemize
Setting up and start all the camera threads.
\end_layout

\begin_layout Itemize
Update all the algorithms configurations from the UI.
\end_layout

\begin_layout Itemize
Displaying results through the CVImageWidget class.
\end_layout

\begin_layout Itemize
Sharing information between threads.
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
AboutWindow
\series default
: Class that executes the second available information window.
 This instance displays general application information.
\end_layout

\begin_layout Itemize

\series bold
CameraWorker
\series default
: Main class for all the execution in each of the cameras.
 
\series bold
CameraWorker
\series default
 class is linked with a unique thread that process all the algorithms inside.
 It has 
\series bold
CameraStream
\series default
, 
\series bold
PeopleDetector
\series default
, 
\series bold
Evaluation
\series default
 and 
\series bold
Barrier
\series default
 classes declared within it to distribute the processing.
\end_layout

\begin_layout Itemize

\series bold
CameraStream
\series default
: This class includes all the functions that are related to video processing
 except PD: 
\end_layout

\begin_deeper
\begin_layout Itemize
Main sequence reading loop.
\end_layout

\begin_layout Itemize
Homographies calculations
\end_layout

\begin_layout Itemize
Semantic projections.
\end_layout

\end_deeper
\begin_layout Itemize

\series bold
PeopleDetector
\series default
: Main class to carry PD out.
 All the functions to detect, project and draw results either on the camera
 frame or on the cenital plane are in this class.
\end_layout

\begin_layout Itemize

\series bold
Evaluation
\series default
: Here ground truth is read and also the evaluation between system pedestrian
 detection and ground truth information is performed.
\end_layout

\begin_layout Itemize

\series bold
Barrier
\series default
: This class deals with thread synchronization.
 It is declared in 
\series bold
MainWindow
\series default
 and passed by arguments to the thread so each of them has the same exact
 barrier object to perform the synchronization.
\end_layout

\begin_layout Itemize

\series bold
CVImageWidget
\series default
: Display representation class that deals with all the processes to draw
 OpenCV Mat images into the QT main window interface Widget.
\end_layout

\begin_layout Standard
In Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Hierarchical representation of the code"

\end_inset

 a hierarchical representation of how the different objects are arranged
 is presented.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/Application/Hierarchical class distribution.png
	lyxscale 30
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Hierarchical representation of the code 
\begin_inset CommandInset label
LatexCommand label
name "fig:Hierarchical representation of the code"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
As one can observe everything is under the heritage of the 
\series bold
\shape italic
MainWindow
\series default
\shape default
 object.
 Here we have three 
\series bold
\shape italic
CameraWorker
\series default
\shape default
 threads that include the 
\series bold
\shape italic
Barrier
\series default
\shape default
 object, and three 
\series bold
\shape italic
CameraStream
\series default
\shape default
, 
\series bold
\shape italic
PeopleDetector
\series default
\shape default
 and 
\series bold
\shape italic
Evaluator
\series default
\shape default
 
\begin_inset Formula $-$
\end_inset

one for each one
\begin_inset Formula $-$
\end_inset

.
 In addition, 
\series bold
\shape italic
MainWindow
\series default
\shape default
 instantiates also 
\series bold
\shape italic
AboutWindow
\series default
\shape default
 and 
\series bold
\shape italic
CVImageWidget
\series default
\shape default
 objects.
\end_layout

\begin_layout Section
Multi-thread User Application
\end_layout

\begin_layout Standard
On the contrary to the discussed version, the second developed application
 is focused on general users.
 This version only allows to load the video files and display results.
 All the parameters are set by default so the user does not have to fine
 tune any of them.
 This turns the usage and the general perception of the application much
 more simple and easy.
 Default setup is parametrized as the best observed configuration in the
 results (see Chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Results"

\end_inset

).
\end_layout

\begin_layout Standard
Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:User version application main window"

\end_inset

 displays the general application window where we can observe the difference
 with the developer version.
\end_layout

\begin_layout Standard
Conversely to the developer application, the only functionality of the main
 window is to display results and guide information.
 All the options presented in the developer application for parameter setup
 are no longer available.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Images/Application/User Version Interface.png
	lyxscale 15
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
User version application main window
\begin_inset CommandInset label
LatexCommand label
name "fig:User version application main window"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_body
\end_document
